// Import createSlice from Redux Toolkit to create a slice of the store
import { createSlice } from '@reduxjs/toolkit';
// Import AppState type from your store setup to type the state
import { AppState } from '@/store/index';

// Define the shape of the counter state
interface CounterState {
  value: number; // The counter has a single property, `value`, which is a number
}

// Initial state for the counter
const initialState: CounterState = {
  value: 0, // Start the counter at 0
};

// Create a slice of the Redux store using createSlice
export const counterSlice = createSlice({
  name: 'counter', // A unique name for this slice
  initialState, // Set the initial state for this slice
  reducers: {
    // Reducer to increment the counter value by 1
    increment: (state) => {
      state.value += 1;
    },
    // Reducer to decrement the counter value by 1
    decrement: (state) => {
      state.value -= 1;
    },
  },
});

// Export the action creators generated by createSlice
// These are functions you can call to dispatch actions to update the counter state
export const { increment, decrement } = counterSlice.actions;

// Selector function to access the counter value from the state
// `AppState` represents the entire state of the Redux store
// This function takes the entire state as an argument and returns the `value` of the counter
export const selectCount = (state: AppState) => state.counter.value;

// Export the reducer function generated by createSlice
// This reducer handles actions related to the counter state and is used to configure the store
export default counterSlice.reducer;
